name: Python CI
on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  AZURE_OPENAI_API: ${{ secrets.AZURE_OPENAI_API }}
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}

jobs:
  validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tools: ['black', 'bandit', 'pylint', 'flake8']
        include:
          - tools: pytest
            args: -m not integration and not gpu
            flags: unittests
          - tools: pytest
            args: -m integration
            flags: integration
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Azure/login@v1.4.6
        continue-on-error: true
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: ${{ matrix.tools }}
        uses: microsoft/action-python@0.6.1
        with:
          ${{ matrix.tools }}: true
          args: ${{ matrix.args }}
          workdir: '.'
          testdir: 'tests'
          python_version: '3.11.3'
          flags: ${{ matrix.flags }}

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v1
        with:
          python-version: '3.11.3'

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          default_bump: false

      - name: Set Configurations
        if: steps.tag_version.outputs.release_type && github.event_name != 'release'
        shell: bash
        env:
          VERSION: ${{ steps.tag_version.outputs.new_version }}
        run: sed -ri 's/(__version__ = ")([0-9]+\.[0-9]+\.[0-9]+?(.*))(")/\1'"$VERSION"'\3/' "src/gpt_review/__init__.py" || exit 1

      - name: Set Configurations
        if: steps.tag_version.outputs.release_type && github.event_name == 'release'
        shell: bash
        env:
          VERSION: ${{ steps.tag_version.outputs.previous_version }}
        run: sed -ri 's/(__version__ = ")([0-9]+\.[0-9]+\.[0-9]+?.*)(")/\1'"$VERSION"'\3/' "src/gpt_review/__init__.py" || exit 1

      - name: Publish Snapshot to TestPyPi
        uses: microsoft/action-python@0.4.0
        continue-on-error: true
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          pypi_publish: true
          pypi_password: ${{ secrets.TEST_PYPI_PASSWORD  }}
          pypi_repo: testpypi
          version_suffix: -post${{ github.run_number }}-dev${{ github.run_attempt }}
          workdir: '.'
          python_version: '3.11.3'

      - name: Publish RC to PyPi
        uses: microsoft/action-python@0.4.0
        if: ${{ github.event_name == 'push' }}
        with:
          pypi_publish: true
          pypi_password: ${{ secrets.PYPI_PASSWORD }}
          version_suffix: -rc${{ github.run_number }}-post${{ github.run_attempt }}
          workdir: '.'
          python_version: '3.11.3'

      - name: Publish Release to PyPi
        uses: microsoft/action-python@0.4.0
        if: ${{ github.event_name == 'release' }}
        with:
          pypi_publish: true
          pypi_password: ${{ secrets.PYPI_PASSWORD }}
          workdir: '.'
          python_version: '3.11.3'

      - uses: EndBug/add-and-commit@v9
        if: ${{ github.event_name == 'release' }}
        with:
          message: Update Version to ${{ steps.tag_version.outputs.previous_version }} [no ci]
          committer_name: GitHub Actions
          committer_email: actions@github.com
          add: src/gpt_review/__init__.py
          push: origin HEAD:main --force-with-lease
